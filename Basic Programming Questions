1) Find size of variable in generic form
  #define sizeof( var) ((&var + 1) - (&var))
  
2) Inline Function vs Macro
  Macro is expanded in the preprocessor time. It is just text substituion and also macros are not type checked where as inline function does.
  Inline function replaces the function call with actual body of the function. Inline is just a request to a compiler.
  Advantage of inline function is, it does not require function call and does not return anything from the function.
  Disadvantage of inline function is, it increases file size as same function code is copied again and again in the program wherever it is called.
 
3) SPI 


const volatile int *p can be used?
endian swap macro?
sizeof of variable in generic form.

what is uboot
what is device tree and can we convert dtb into dts.

How do you debug if stack memory corruption happens. depth in debugging other than debugger and print. Mostly on how stack is corrupted.
Start address of the stack pointer and how much allocated stack size for the given function.
Before main what things are done in microcontroller?
stack pointer assignment in microntroller booting?
boot process in depth of an microcontroller and linux.`


what about QSPI?
How to determine SPI is received the trasnmitted data without ACKNOWLEDGEMNT like in I2C.
I2C, SPI max speed?
Study about SPI interrupt level and edge triggered??
SPI and I2c in Interrupt?


what is the use of pull up resistor in I2C and without  it can we use?
I2C operates on open drain configuration, where the line / bus can be pulled down or released
(when released pull up resistor ensures the bus/line voltage is upto the vcc).
If I2C is push pull type of output, master can drive the bus to high when slave tries to drive 
the bus to low which leads to communication issue casuing short (vcc to ground).

Sinking current means when the current is flowing from load to port. Sourcing current means when the current flows from port to load.
So I2C open drain port is sinking current mode.

I2C Arbitration?
Since I2C is an multi master device, bus contention can happen. This bus contention is avoided using this open drain configuration.
i.e Master continously sense the bus and compares the bus data with master output data. when it mismatch master will halt the transmission.
In this configuration which master pulls line/transmit low first, will get the control of the bus.

Clock Stretching?
In I2C master will generate the clock signal. But sometimes slave may need time to process the data received from master. 
So, to make further delay i2c may pull the clock line to low on the 9th clock cycle (in ACK cycle). There is no timeout mentioned for how much
time slave can hold the clock line low. In the mean time master shall sense the clock line and wait for it to become high again.

Clock stretching can happen when slave needs to process the data/store the data or to prepare response for the received data.

